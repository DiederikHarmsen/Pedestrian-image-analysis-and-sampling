import math, random, os, glob
from PIL import Image, ImageStat


def brightness( im_file ):
   im = Image.open(im_file)
   stat = ImageStat.Stat(im)
   r,g,b = stat.mean
   print(r, " and " , g , "and", b)
   return math.sqrt(0.241*(r**2) + 0.691*(g**2) + 0.068*(b**2))


Pictures = "C:/Users/diede/Documents/EDAN70 ML fairness project/smirk/Datasets"
dir_listdir = os.listdir(Pictures)
#for filename in dir_listdir:
#   print(dir_listdir)
#   print(filename)
#   print(str(os.path.splitext(filename)))
#   im = Image.open(filename)
#   stat = ImageStat.Stat(im)
#   r,g,b = stat.mean
#   print(r, " and " , g , "and", b)
#   value = brightness(filename)
#   print(str(value))

Images_checked = 0
Average_brightness = 0
Pictures0to20 = 0
Pictures20to40 = 0
Pictures40to60 = 0
Pictures60to80 = 0
Pictures80to100 = 0
Pictures100to120 = 0
Pictures120to140 = 0
Pictures140plus = 0

for dirs in os.listdir(Pictures):
   subdir = os.path.join(Pictures, dirs)
   for subdirs in os.listdir(subdir):
      useddir = os.path.join(subdir, subdirs)
      dir_listing = os.listdir(useddir)
      used_dir_listing = list(filter(lambda k: not "labels" in k, dir_listing))
      used_dir_listing = list(filter(lambda k: not "cam.cap" in k, used_dir_listing))
      Third = int(len(used_dir_listing)/3)
      sample1 = str(random.randint(0, Third)).zfill(6)
      sample2 = str(random.randint(Third, Third*2)).zfill(6)
      sample3 = str(random.randint(Third*2, Third*3)).zfill(6)
      for filename in used_dir_listing:
         for pngfile in glob.iglob(os.path.join(useddir, filename)):
            if sample1 in filename or sample2 in filename or sample3 in filename:  
               im = Image.open(pngfile)
               stat = ImageStat.Stat(im)
               r,g,b = stat.mean
               brightval = math.sqrt(0.241*(r**2) + 0.691*(g**2) + 0.068*(b**2))
               Images_checked += 1
               Average_brightness += brightval
               brightval = int(brightval)
               if 0 <= brightval < 20:
                  Pictures0to20 = Pictures0to20 + 1
               elif 20 <= brightval < 40:
                  Pictures20to40 = Pictures20to40 + 1
               elif 40 <= brightval < 60:
                  Pictures40to60 = Pictures40to60 + 1
               elif 60 <= brightval < 80:
                  Pictures60to80 = Pictures60to80 + 1
               elif 80 <= brightval < 100:
                  Pictures80to100 = Pictures80to100 + 1
               elif 100 <= brightval < 120:
                  Pictures100to120 = Pictures100to120 + 1
               elif 120 <= brightval < 140:
                  Pictures120to140 = Pictures120to140 + 1
               elif 140 <= brightval:
                  Pictures140plus = Pictures140plus + 1

Average_brightness = Average_brightness/Images_checked

print("Images checked: ", Images_checked)
print("Average Brightness: ", Average_brightness)
print("0-20: ", Pictures0to20)
print("20-40: ", Pictures0to20)
print("40-60: ", Pictures0to20)
print("60-80: ", Pictures0to20)
print("80-100: ", Pictures0to20)
print("100-120: ", Pictures0to20)
print("120-140: ", Pictures0to20)
print("140+: ", Pictures0to20)









#for k in glob.glob(Pictures):
#   im = Image.open(k)
#   stat = ImageStat.Stat(im)
#   r,g,b = stat.mean
#   print(r, " and " , g , "and", b)
#   print("Brightness perceived as: " ,math.sqrt(0.241*(r**2) + 0.691*(g**2) + 0.068*(b**2)))
   
 
